{"Name":"Dynamic Folder Export","Objects":[{"Type":"DynamicFolder","Name":"vCenter Systems","Notes":"<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.0 Transitional//EN\" \"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd\">\r\n<html xmlns=\"http://www.w3.org/1999/xhtml\">\r\n\t<head>\r\n\t\t<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" /><title>\r\n\t\t</title>\r\n\t\t<style type=\"text/css\">\r\n\t\t\t.cs87FC59A6{text-align:left;text-indent:0pt;margin:0pt 0pt 0pt 0pt}\r\n\t\t\t.cs4CAFE230{color:#000000;background-color:transparent;font-family:'Times New Roman';font-size:12pt;font-weight:normal;font-style:normal;}\r\n\t\t\t.cs7CD7784A{color:#000000;background-color:transparent;font-family:'Times New Roman';font-size:12pt;font-weight:bold;font-style:normal;}\r\n\t\t</style>\r\n\t</head>\r\n\t<body>\r\n\t\t<p class=\"cs87FC59A6\"><span class=\"cs4CAFE230\">This Dynamic Folder pulls all the VMs from your vCenter environment and puts them into the appropriate DataCenter/Cluster folder.</span></p><p class=\"cs87FC59A6\"><span class=\"cs4CAFE230\">&nbsp;</span></p><p class=\"cs87FC59A6\"><span class=\"cs4CAFE230\">* You </span><span class=\"cs7CD7784A\">MUST</span><span class=\"cs4CAFE230\"> have the VMware PowerCLI installed on your system for this to work.</span></p><p class=\"cs87FC59A6\"><span class=\"cs4CAFE230\">&nbsp;</span></p><p class=\"cs87FC59A6\"><span class=\"cs4CAFE230\">* Check the Server URL Custom Property and enter a comma separated list of your vCenter Servers</span></p><p class=\"cs87FC59A6\"><span class=\"cs4CAFE230\">&nbsp;</span></p><p class=\"cs87FC59A6\"><span class=\"cs4CAFE230\">* Configure your Credentials under the Credentials tab, and you should be good to go!</span></p><p class=\"cs87FC59A6\"><span class=\"cs4CAFE230\">&nbsp;</span></p><p class=\"cs87FC59A6\"><span class=\"cs4CAFE230\">* This script was developed and tested on Windows 10 and Powershell 5.1</span></p><p class=\"cs87FC59A6\"><span class=\"cs4CAFE230\">&nbsp;</span></p></body>\r\n</html>\r\n","CustomProperties":[{"Name":"Server URL","Type":"Text","Value":"TODO"}],"Script":"$objCred=new-object System.Management.automation.pscredential -ArgumentList $EffectiveUsername$,(Convertto-securestring $EffectivePassword$ -AsPlainText -Force)\r\n\r\n$vcServers = \"$CustomProperty.ServerURL$\"\r\n\r\n$vcServers=$vcServers.split(\",\")\r\n\r\n\r\nforeach ($vcenter in $vcServers) {\r\n    connect-viserver -credential $objCred $vcenter > $null\r\n}\r\n\r\n#write-host \"Loading Virtual Machines...\"\r\n$vmList=get-vm | where { $_.PowerState -eq 'PoweredOn' }\r\n\r\n$mySystems=$vmList | select Name,Guest,GuestId,@{n='IPAddress'; e={(get-vmguest -vm $_).Nics.IPAddress }},@{n='Datacenter'; e={($_ | get-datacenter).name } }, @{n=\"Cluster\"; e= {($_ | get-cluster).name} }\r\n$ServerList = new-object System.Collections.ArrayList\r\n\r\n$ipv4Match='^(?:(?:0?0?\\d|0?[1-9]\\d|1\\d\\d|2[0-5][0-5]|2[0-4]\\d)\\.){3}(?:0?0?\\d|0?[1-9]\\d|1\\d\\d|2[0-5][0-5]|2[0-4]\\d)$'\r\n\r\n\r\nforeach ($vm in $mySystems) {\r\n    $vmName=$vm.Name\r\n    $folderName=\"$($vm.datacenter)/$($vm.cluster)\"\r\n    if ($vm.guest.extensiondata.guestfamily -match \"windows\") { $vmType=\"RemoteDesktopConnection\"}\r\n    if ($vm.guest.extensiondata.guestfamily -match \"Linux\") {$vmType=\"SSH\"}\r\n    \r\n    if ([string]::IsNullOrEmpty($vmType) -eq $true) {\r\n        if ($vm.guestid -match \"windows\") { \r\n            $vmType=\"RemoteDesktopConnection\"\r\n        } else {\r\n            $vmType=\"SSH\"\r\n        }\r\n    }\r\n\r\n    $IPAddress=($vm.guest.extensiondata.net.ipaddress -match  $ipv4Match)[0]\r\n    \r\n\tif ($IPAddress -eq $true) {\r\n        $IPAddress=$vm.guest.extensiondata.net.ipaddress\r\n    }\r\n\r\n    if ($vm.guest.extensiondata.guestfamily -match \"windows\") {\r\n     $tmpObj=[pscustomobject]@{\r\n        Name = $vmName\r\n        Path = $folderName\r\n        ComputerName = $IPAddress\r\n        Type = $vmType\r\n     }\r\n     \r\n    }\r\n\r\n    if ($vm.guest.extensiondata.guestfamily -match \"Linux\") {\r\n     $tmpObj=[pscustomobject]@{\r\n            Name = $vmName\r\n            Path = $folderName\r\n            ComputerName = $IPAddress\r\n            TerminalconnectionType = $vmType\r\n            Type=\"TerminalConnection\"\r\n     }        \r\n    }\r\n\r\n    [void] $serverList.add($tmpObj)\r\n\r\n}\r\n\r\n$objRoyalTS=@{}\r\n[void] $objRoyalTS.add('Objects',$serverList)\r\n\r\n#$objRoyalTS | ConvertTo-Json | out-file \"royalts.json\"\r\n\r\n\r\n$objRoyalTS | ConvertTo-Json","ScriptInterpreter":"powershell","DynamicCredentialScriptInterpreter":"json"}]}